name: CI checks
  push:
    branches:
      - master
      - add_ci
  pull_request:
    branches:
      - master
      - add_ci

name: Standard CI checks

jobs:
  Hadolint:
    runs-on: ubuntu-latest
    strategy:
        matrix:
          dockerfile: ["docker-builds/ui/Dockerfile", "docker-builds/server/Dockerfile"]
    steps:
      - uses: actions/checkout@v2
      - uses: hadolint/hadolint-action@v1.5.0
        with:
          dockerfile: ${{ matrix.dockerfile }}

  Code_security:
    name: Code security
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Scan project
      uses: ShiftLeftSecurity/scan-action@master

  docker_checks:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        image: [ 'server', 'ui' ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Build an image from Dockerfile
        env:
          ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
          ECR_REPOSITORY: "namebazaar"
        run: |
          echo "Building on ${GITHUB_REF} branch"
          docker build -t ${{ matrix.image }}:${{ github.sha }} -f docker-builds/${{ matrix.image }}/Dockerfile .
          if [[ ${GITHUB_REF} == "refs/heads/add_ci" ]]; then
            echo "On the default branch will push to the registry with latest and ${{ github.sha }} tags"
            docker tag ${{ matrix.image }}:${{ github.sha }} ${ECR_REGISTRY}/${ECR_REPOSITORY}-${{matrix.image}}:${{ github.sha }}
            docker tag ${{ matrix.image }}:${{ github.sha }} ${ECR_REGISTRY}/${ECR_REPOSITORY}-${{matrix.image}}:latest
            docker push ${ECR_REGISTRY}/${ECR_REPOSITORY}-${{matrix.image}}:${{ github.sha }}
            docker push ${ECR_REGISTRY}/${ECR_REPOSITORY}-${{matrix.image}}:latest

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: '${{ matrix.image }}:${{ github.sha }}'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL'
